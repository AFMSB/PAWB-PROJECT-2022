// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Autentica o utilizador e gera o token para os próximos acessos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Realizar autenticação",
                "parameters": [
                    {
                        "description": "Do login",
                        "name": "evaluation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaggermodel.UserLoginSwagger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Claims"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Desautentica o utilizador invalidando o token atual",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Realizar desautenticação",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "bool"
                    },
                    "406": {
                        "description": "Cannot log out"
                    }
                }
            }
        },
        "/auth/refresh_token": {
            "put": {
                "description": "Atualiza o token de autenticação do usuário invalidando o antigo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Atualiza token de autenticação",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Claims"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "406": {
                        "description": "Cannot invalidate old token"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Regista um utilizador",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Realizar registro",
                "parameters": [
                    {
                        "description": "Do register",
                        "name": "evaluation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaggermodel.UserRegisterSwagger"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Claims"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/follower/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exibe a lista, sem todos os campos, de todos os followers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Follower"
                ],
                "summary": "Obtem os Followers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Follower"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Associa um Follower a um User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Follower"
                ],
                "summary": "Associa um Follower(User) a um User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Associate User as Follower",
                        "name": "follower",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaggermodel.FollowingSwagger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Follower"
                            }
                        }
                    },
                    "400": {
                        "description": "Token Malformed, Check Syntax, Follower User ID Already Associated"
                    },
                    "404": {
                        "description": "User Not found"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Desassocia um Follower de um User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Follower"
                ],
                "summary": "Desassocia um Follower(User) de um User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Deassociate Follower from User",
                        "name": "follower",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaggermodel.FollowingSwagger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deassociation Success"
                    },
                    "400": {
                        "description": "Token Malformed, Check Syntax"
                    },
                    "404": {
                        "description": "User Not found"
                    }
                }
            }
        },
        "/follower/following": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exibe a lista, sem todos os campos, de todos os users que estamos a seguir",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Follower"
                ],
                "summary": "Obtem os users que estamos a seguir",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Follower"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/follower/history": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtem as localizações de um determinado Follower",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Follower"
                ],
                "summary": "Obtem as localizações de um Follower",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "get follower locations history",
                        "name": "follower",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaggermodel.FollowingHistorySwagger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Position"
                            }
                        }
                    },
                    "400": {
                        "description": "Token Malformed, Check Syntax, Dates Malformed"
                    },
                    "401": {
                        "description": "User not authorized to check given User locations."
                    },
                    "404": {
                        "description": "User ID Not Found, "
                    }
                }
            }
        },
        "/position": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cria uma localizacao de um utilizador em especifico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Position"
                ],
                "summary": "Adicionar uma localizaçao",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add Location",
                        "name": "evaluation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaggermodel.PositionAddSwagger"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Position"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/position/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exibe a lista da última localização do utilizador",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Position"
                ],
                "summary": "Obter a última localização do utilizador",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Position"
                        }
                    },
                    "400": {
                        "description": "User Token Malformed"
                    },
                    "404": {
                        "description": "User Not found"
                    }
                }
            }
        },
        "/position/filter": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exibe a lista de localizações dos utilizadores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Position"
                ],
                "summary": "Obtem todas as localizações dos utilizadores com filtros",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add Location",
                        "name": "localization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaggermodel.UserLocationWithFilters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Position"
                            }
                        }
                    },
                    "400": {
                        "description": "User Token Malformed"
                    },
                    "404": {
                        "description": "Location Not found"
                    }
                }
            }
        },
        "/position/history": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exibe a lista de todas as localizações do utilizador",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Position"
                ],
                "summary": "Obtem todas as localizações do utilizador",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "get locations history",
                        "name": "localization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaggermodel.UserLocationHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Position"
                            }
                        }
                    },
                    "400": {
                        "description": "User Token Malformed"
                    },
                    "404": {
                        "description": "User Not found"
                    }
                }
            }
        },
        "/position/history/user": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtem todas as localizações do utilizador",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Position"
                ],
                "summary": "Obtem todas as localizações do utilizador",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add Location",
                        "name": "localization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaggermodel.UserLocationHistoryUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Position"
                            }
                        }
                    },
                    "400": {
                        "description": "Check Syntax, Dates Malformed"
                    },
                    "404": {
                        "description": "UserID Not found"
                    }
                }
            }
        },
        "/position/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exclui uma localização selecionada",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Position"
                ],
                "summary": "Exclui uma localização",
                "operationId": "get-string-by-int",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete succeeded!"
                    },
                    "404": {
                        "description": "None found!"
                    }
                }
            }
        },
        "/socket": {
            "get": {
                "description": "Web Socket permite enviar notificações diretamente para o frontend",
                "tags": [
                    "Socket"
                ],
                "summary": "Web Socket permite enviar notificações diretamente para o frontend",
                "responses": {
                    "200": {
                        "description": "Connection confirm"
                    },
                    "400": {
                        "description": "User Token Malformed"
                    },
                    "404": {
                        "description": "Connection failed"
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exibe a lista, sem todos os campos, de todos os Users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Obtem todos os  Users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/user/alert-time": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obter o tempo para alertas definido pelo utilizador",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Obter o tempo para alertas definido pelo utilizador",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/user/alert/time/": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza a periodicidade de alerta determinando o tempo máximo até dar uma pessoa como perdida",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Atualiza a periodicidade de alerta",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Udpdate Alert",
                        "name": "evaluation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaggermodel.UserPeriodUpdateSwagger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Not acceptable"
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obter a informação do utilizador",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Obter a informação do utilizador",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/user/last-positions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exibe a lista, sem todos os campos, da última posição/localização de cada User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Obtem última posição/localização de cada User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/user/search/{username}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exibe a lista, sem todos os campos, de Users dado um username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Obter Users dado um username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Token Malformed"
                    }
                }
            }
        },
        "/user/sos": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Alterar para on/off o estado do SOS do utilizador",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Alterar estado do SOS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "bool"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/user/users-under-xkms": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exibe uma lista de users que se encontram num raio igual a inferior a x kms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Exibe uma lista de users que se encontram num raio igual a inferior a x kms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "radius",
                        "name": "radius",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaggermodel.RadiusSwagger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Claims": {
            "type": "object",
            "properties": {
                "access_mode": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Follower": {
            "type": "object",
            "properties": {
                "FollowerUserID": {
                    "type": "integer"
                },
                "UserID": {
                    "type": "integer"
                }
            }
        },
        "model.Position": {
            "type": "object",
            "required": [
                "Latitude",
                "Longitude"
            ],
            "properties": {
                "Latitude": {
                    "type": "number"
                },
                "Longitude": {
                    "type": "number"
                },
                "UserId": {
                    "type": "integer"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "access_mode": {
                    "type": "integer"
                },
                "alertTime": {
                    "type": "integer"
                },
                "sos": {
                    "type": "boolean"
                },
                "userFriends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Follower"
                    }
                },
                "userPositions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Position"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "swaggermodel.FollowingHistorySwagger": {
            "type": "object",
            "required": [
                "end",
                "followerID",
                "start"
            ],
            "properties": {
                "end": {
                    "type": "string",
                    "example": "2022-07-01"
                },
                "followerID": {
                    "type": "integer"
                },
                "start": {
                    "type": "string",
                    "example": "2022-01-01"
                }
            }
        },
        "swaggermodel.FollowingSwagger": {
            "type": "object",
            "properties": {
                "FollowerUserID": {
                    "type": "integer"
                }
            }
        },
        "swaggermodel.PositionAddSwagger": {
            "type": "object",
            "required": [
                "Latitude",
                "Longitude"
            ],
            "properties": {
                "Latitude": {
                    "type": "number",
                    "example": 39.557191
                },
                "Longitude": {
                    "type": "number",
                    "example": -7.8536599
                }
            }
        },
        "swaggermodel.RadiusSwagger": {
            "type": "object",
            "properties": {
                "Radius": {
                    "type": "integer"
                }
            }
        },
        "swaggermodel.UserLocationHistory": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "end": {
                    "type": "string",
                    "example": "2022-07-01"
                },
                "start": {
                    "type": "string",
                    "example": "2022-01-01"
                }
            }
        },
        "swaggermodel.UserLocationHistoryUser": {
            "type": "object",
            "required": [
                "end",
                "start",
                "userID"
            ],
            "properties": {
                "end": {
                    "type": "string",
                    "example": "2022-07-01"
                },
                "start": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "swaggermodel.UserLocationWithFilters": {
            "type": "object",
            "required": [
                "UserId",
                "end",
                "start"
            ],
            "properties": {
                "UserId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "end": {
                    "type": "string",
                    "example": "2022-07-01"
                },
                "start": {
                    "type": "string",
                    "example": "2022-01-01"
                }
            }
        },
        "swaggermodel.UserLoginSwagger": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "swaggermodel.UserPeriodUpdateSwagger": {
            "type": "object",
            "properties": {
                "alertTimeInHours": {
                    "type": "integer"
                }
            }
        },
        "swaggermodel.UserRegisterSwagger": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
